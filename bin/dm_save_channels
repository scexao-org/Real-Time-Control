#!/usr/bin/env python

import os
import sys
import numpy as np
from astropy.io import fits as pf
from pyMilk.interfacing.isio_shmlib import SHM as shm
#from xaosim.scexao_shmlib import shm
MILK_SHM_DIR = os.environ['MILK_SHM_DIR']

home = os.getenv('HOME')
auxdir = home + "/conf/dm_patterns/"

hmsg = """ --------------------------------------------------------------
dm_save_channel: saves the current channel to a fits file

Command syntax:
--------------

>> dm_save_channels chn0 chn1...chnn file.fits

Parameters:
----------

- chn: the DM channel to save
- file.fits: a fits file name to write (default: channel%d.fits)
-------------------------------------------------------------- """

args = sys.argv[1:]
nargs = len(args)
chn = np.zeros(nargs, dtype=int)

if args == []: 
    print(hmsg)
    sys.exit()

# -----------------------

try:
    for i in range(nargs-1):
        chn[i] = int(args[i])
except:
    print(hmsg)
    sys.exit()

# -----------------------

try:
    fname = args[-1]
except:
    fname = "channels.fits"


# -----------------------
disp = np.zeros((50, 50))
for i in range(nargs-1):
    if chn[i] != 12:
        dmc = shm('%s/dm00disp%02d.im.shm' % (MILK_SHM_DIR,chn[i],), verbose=False) # DM channel
        disp += dmc.get_data()
    else:
        dmc = shm('%s/dm00disp.im.shm' % (MILK_SHM_DIR,), verbose=False) # DM channel
        disp = dmc.get_data()
        offset = np.mean(disp)
        disp -= offset

offset = np.mean(disp)
disp -= offset
#disp /= 2.
disp = disp.astype('float32')

pf.writeto(auxdir+fname, disp, overwrite=True)
